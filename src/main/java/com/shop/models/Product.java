package com.shop.models;
// Generated Jun 20, 2019, 3:42:52 PM by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "Product", schema = "dbo", catalog = "ShopBadminton_Online")
public class Product implements java.io.Serializable {

	private Integer id;
	private Category category;
	private Producer producer;
	private String name;
	private String image;
	private int quantity;
	private String description;
	private int isHot;
	private int isNew;
	private Integer active;
	private Set<Statistic> statistics = new HashSet<Statistic>(0);
	private Set<ImportProduct> importProducts = new HashSet<ImportProduct>(0);
	private Set<News> newses = new HashSet<News>(0);
	private Set<BillDetail> billDetails = new HashSet<BillDetail>(0);
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<Price> prices = new HashSet<Price>(0);

	public Product() {
	}

	public Product(Category category, Producer producer, String name, String image, int quantity,
			String description, int isHot, int isNew) {
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.image = image;
		this.quantity = quantity;
		this.description = description;
		this.isHot = isHot;
		this.isNew = isNew;
	}

	public Product(Category category, Producer producer, String name, String image, int quantity,
			String description, int isHot, int isNew, Integer active, Set<Statistic> statistics,
			Set<ImportProduct> importProducts, Set<News> newses, Set<BillDetail> billDetails, Set<Comment> comments,
			Set<Price> prices) {
		this.category = category;
		this.producer = producer;
		this.name = name;
		this.image = image;
		this.quantity = quantity;
		this.description = description;
		this.isHot = isHot;
		this.isNew = isNew;
		this.active = active;
		this.statistics = statistics;
		this.importProducts = importProducts;
		this.newses = newses;
		this.billDetails = billDetails;
		this.comments = comments;
		this.prices = prices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CategoryID", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProducerID", nullable = false)
	public Producer getProducer() {
		return this.producer;
	}

	public void setProducer(Producer producer) {
		this.producer = producer;
	}

	@Column(name = "Name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "Image", nullable = true)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "Quantity", nullable = false)
	public int getQuantity() {
		return this.quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	@Column(name = "Description", nullable = true)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "IsHot", nullable = true)
	public int getIsHot() {
		return this.isHot;
	}

	public void setIsHot(int isHot) {
		this.isHot = isHot;
	}

	@Column(name = "IsNew", nullable = true)
	public int getIsNew() {
		return this.isNew;
	}

	public void setIsNew(int isNew) {
		this.isNew = isNew;
	}

	@Column(name = "Active")
	public Integer getActive() {
		return this.active;
	}

	public void setActive(Integer active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Statistic> getStatistics() {
		return this.statistics;
	}

	public void setStatistics(Set<Statistic> statistics) {
		this.statistics = statistics;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ImportProduct> getImportProducts() {
		return this.importProducts;
	}

	public void setImportProducts(Set<ImportProduct> importProducts) {
		this.importProducts = importProducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<News> getNewses() {
		return this.newses;
	}

	public void setNewses(Set<News> newses) {
		this.newses = newses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<BillDetail> getBillDetails() {
		return this.billDetails;
	}

	public void setBillDetails(Set<BillDetail> billDetails) {
		this.billDetails = billDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Price> getPrices() {
		return this.prices;
	}

	public void setPrices(Set<Price> prices) {
		this.prices = prices;
	}

}
